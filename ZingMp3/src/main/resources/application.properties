server.port=${port:8080}

#Database
spring.datasource.url=${JDBC_DATABASE_URL:}
spring.datasource.driver-class-name=${JDBC_DATABASE_DRIVER:}
spring.datasource.username=${JDBC_DATABASE_USERNAME:}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:}

#Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.id.new_generator_mappings = true
spring.jpa.properties.hibernate.show.sql = true
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.hb2dll.auto = update
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
## All files uploaded through the REST API will be stored in this directory





##Google

spring.security.oauth2.client.registration.google.client-id=586241566045-n0bj1bp64fhk5l6ohn8mbrkkj1qnntlh.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=vtyEbDhZQt1Sc7dyjGU3fOQm
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth/2/code/google
